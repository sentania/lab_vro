<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item1" object-name="workflow:name=generic" id="0d99565c-ef25-449e-8a14-666bd94df803" editor-version="2.0" version="0.0.0" api-version="6.0.0" restartMode="1" resumeFromFailedMode="0">
    <display-name>Machine Provisioned</display-name>
    <position y="50.0" x="100.0"/>
    <input>
        <param name="inputProperties" type="Properties"/>
    </input>
    <output/>
    <attrib name="customProps" type="Properties">
        <value encoded="n">{}</value>
    </attrib>
    <attrib name="vmobject" type="VC:VirtualMachine">
        <value encoded="n"/>
    </attrib>
    <attrib name="vmname" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="uuid" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="notes" type="string">
        <value encoded="n">Cost Code Info</value>
    </attrib>
    <attrib name="actionResult" type="Task">
        <value encoded="n"/>
    </attrib>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="50.0" x="600.0"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item4" type="task" comparator="0">
        <display-name>Log Vars</display-name>
        <script encoded="false">function dumpProperties(props,lvl){&#13;
         var keys = props.keys;&#13;
         var prefix = ""&#13;
     for (var i=0; i&lt;lvl; i++){&#13;
                   prefix = prefix + "";&#13;
          }&#13;
          for (k in keys){&#13;
                 var key = keys[k];&#13;
                 var value = props.get(keys[k])&#13;
                 if ("Properties" == System.getObjectType(value)){&#13;
                  System.log(prefix + key + "[")&#13;
                  dumpProperties(value,(lvl+2));&#13;
                  System.log(prefix+ "]")&#13;
                 } else{&#13;
                   System.log( prefix + key + ":" + value)&#13;
                 }&#13;
                 }&#13;
   }&#13;
&#13;
   dumpProperties(inputProperties, 0)&#13;
&#13;
   var customProps = inputProperties.get("customProperties")&#13;
&#13;
   var resourceNames = [];&#13;
   resourceNames = inputProperties.get('resourceNames');&#13;
   &#13;
   var vmname = resourceNames[0];&#13;
   </script>
        <in-binding>
            <bind name="inputProperties" type="Properties" export-name="inputProperties"/>
        </in-binding>
        <out-binding>
            <bind name="customProps" type="Properties" export-name="customProps"/>
            <bind name="uuid" type="string" export-name="uuid"/>
            <bind name="vmname" type="string" export-name="vmname"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="60.0" x="140.0"/>
    </workflow-item>
    <workflow-item name="item3" out-name="item0" type="task" script-module="net.sentania.Actions/SetNotesonVM" comparator="0">
        <display-name>Set VM Notes</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("net.sentania.Actions").SetNotesonVM(vm,notes);
</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vmobject">
                <description></description>
            </bind>
            <bind name="notes" type="string" export-name="notes">
                <description></description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="Task" export-name="actionResult"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="60.0" x="380.0"/>
    </workflow-item>
    <workflow-item name="item4" out-name="item3" type="task" script-module="net.sentania.Actions/getVCVMbyName" comparator="0">
        <display-name>Action element</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("net.sentania.Actions").getVCVMbyName(vmname);
</script>
        <in-binding>
            <bind name="vmname" type="string" export-name="vmname">
                <description></description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="VC:VirtualMachine" export-name="vmobject"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="61.42857142857143" x="241.58730158730157"/>
    </workflow-item>
    <presentation/>
</ns2:workflow>
