<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item5" object-name="workflow:name=generic" id="90643f14-1ed9-402e-b57e-3d3e4d397a7b" editor-version="1.6" version="1.0.0" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
    <display-name>Add tag to VC vm</display-name>
    <position y="45.5" x="100.0"/>
    <input>
        <param name="vCenterVm" type="VC:VirtualMachine"/>
        <param name="newTagCategory" type="boolean"/>
        <param name="tagCategoryName" type="string"/>
        <param name="tagName" type="string"/>
        <param name="tagDescription" type="string"/>
    </input>
    <output/>
    <attrib name="vapiEndpoint" type="VAPI:VAPIEndpoint">
        <value encoded="n"/>
    </attrib>
    <attrib name="tagId" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="tagCategoryId" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="endpoint" type="string">
        <value encoded="n"></value>
    </attrib>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="45.40909090909091" x="844.5"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item3" alt-out-name="item2" type="condition" comparator="0">
        <display-name>Create Tag Category</display-name>
        <script encoded="false">// Generated by the system, cannot be edited
return (newTagCategory === true);</script>
        <in-binding>
            <bind name="newTagCategory" type="boolean" export-name="newTagCategory"/>
        </in-binding>
        <out-binding/>
        <condition name="newTagCategory" type="boolean" comparator="0" label="null">false</condition>
        <position y="45.40909090909091" x="344.5"/>
    </workflow-item>
    <workflow-item name="item2" out-name="item4" type="link" linked-workflow-id="0e9c72af-5c3d-4207-9164-9af35fc78caa" comparator="0">
        <display-name>Create vSphere tag</display-name>
        <in-binding>
            <bind name="tagName" type="string" export-name="tagName"/>
            <bind name="tagDescription" type="string" export-name="tagDescription"/>
            <bind name="tagCategoryId" type="string" export-name="tagCategoryId"/>
            <bind name="vapiEndpoint" type="VAPI:VAPIEndpoint" export-name="vapiEndpoint"/>
        </in-binding>
        <out-binding>
            <bind name="tagId" type="string" export-name="tagId"/>
        </out-binding>
        <position y="55.40909090909091" x="484.5"/>
    </workflow-item>
    <workflow-item name="item3" out-name="item2" type="link" linked-workflow-id="986294a3-0e8d-4c12-ab87-89e8260edaad" comparator="0">
        <display-name>Create vSphere Tag Category</display-name>
        <in-binding>
            <bind name="tagCategoryName" type="string" export-name="tagCategoryName"/>
            <bind name="vapiEndpoint" type="VAPI:VAPIEndpoint" export-name="vapiEndpoint"/>
        </in-binding>
        <out-binding>
            <bind name="tagCategoryId" type="string" export-name="tagCategoryId"/>
        </out-binding>
        <position y="128.0" x="342.0"/>
    </workflow-item>
    <workflow-item name="item4" out-name="item0" type="link" linked-workflow-id="3bdcee06-b111-4b23-94aa-1fa11376f5c0" comparator="0">
        <display-name>Associate vSphere tag to VM</display-name>
        <in-binding>
            <bind name="tagId" type="string" export-name="tagId"/>
            <bind name="vcVm" type="VC:VirtualMachine" export-name="vCenterVm"/>
            <bind name="vapiEndpoint" type="VAPI:VAPIEndpoint" export-name="vapiEndpoint"/>
        </in-binding>
        <out-binding/>
        <position y="55.40909090909091" x="664.5"/>
    </workflow-item>
    <workflow-item name="item5" out-name="item1" type="task" comparator="0">
        <display-name>Init</display-name>
        <script encoded="false">
var vapiEndpoints = Server.findAllForType("VAPI:VAPIEndpoint");

for each (var vapiEndpoint in vapiEndpoints){

	if (endpoint == vapiEndpoint.name){
		System.debug("VAPI endpoint found: " + vapiEndpoint.name)
		break;
	}
}

if (!newTagCategory){

	var client = vapiEndpoint.client();
	var tagging = new com_vmware_cis_tagging_category(client);
	var tagCats = tagging.list();
		
	for each (var tagCat in tagCats){
		var obj = tagging.get(tagCat);
		if (tagCategory == obj.name){
			System.debug("Tag category ID found " + obj.id + " for tag " + tagCategory);
			tagCategoryId = obj.id;
			break;
		}
	}
}</script>
        <in-binding>
            <bind name="endpoint" type="string" export-name="endpoint"/>
            <bind name="newTagCategory" type="boolean" export-name="newTagCategory"/>
            <bind name="tagCategory" type="string" export-name="tagCategoryName"/>
        </in-binding>
        <out-binding>
            <bind name="vapiEndpoint" type="VAPI:VAPIEndpoint" export-name="vapiEndpoint"/>
            <bind name="tagCategoryId" type="string" export-name="tagCategoryId"/>
        </out-binding>
        <position y="55.40909090909091" x="204.5"/>
    </workflow-item>
    <presentation>
        <p-group>
            <title>Configure VM tag and category</title>
            <p-param name="vCenterVm">
                <desc>vCenter Virtual Machine </desc>
            </p-param>
            <p-param name="endpoint">
                <desc>VAPI Endpoint</desc>
                <p-qual kind="ognl" name="linkedEnumeration" type="Array/string">GetAction("com.vmware.vapi.tags","listVapiEndpoints").call()</p-qual>
            </p-param>
            <p-param name="newTagCategory">
                <desc>Create new Tag Category</desc>
            </p-param>
            <p-param name="tagCategory">
                <desc>Tag Category</desc>
                <p-qual kind="ognl" name="linkedEnumeration" type="Array/string">GetAction("com.vmware.vapi.tags","listTagCategories").call( #endpoint )</p-qual>
                <p-qual kind="ognl" name="notVisible" type="boolean">#newTagCategory==true</p-qual>
                <p-qual kind="ognl" name="visible" type="boolean">#newTagCategory==false</p-qual>
            </p-param>
            <p-param name="tagCategoryName">
                <desc>Tag Category Name</desc>
                <p-qual kind="ognl" name="notVisible" type="boolean">#newTagCategory==false</p-qual>
                <p-qual kind="ognl" name="visible" type="boolean">#newTagCategory==true</p-qual>
            </p-param>
            <p-param name="tagName">
                <desc>Tag name</desc>
                <p-qual kind="static" name="mandatory" type="boolean">true</p-qual>
            </p-param>
            <p-param name="tagDescription">
                <desc>Tag description</desc>
            </p-param>
        </p-group>
    </presentation>
</ns2:workflow>
