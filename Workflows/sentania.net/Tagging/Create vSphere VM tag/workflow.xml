<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item1" object-name="workflow:name=generic" id="0e9c72af-5c3d-4207-9164-9af35fc78caa" version="2.0.0" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
    <display-name>Create vSphere VM tag</display-name>
    <ref-types>&gt;(VAPI:VAPIEndpoint)</ref-types>
    <position y="50.0" x="100.0"/>
    <input>
        <param name="vapiEndpoint" type="VAPI:VAPIEndpoint"/>
        <param name="tagCategoryId" type="string"/>
        <param name="tagDescription" type="string"/>
        <param name="tagName" type="string"/>
    </input>
    <output>
        <param name="tagId" type="string"/>
    </output>
    <attrib name="errorCode" type="string">
        <value encoded="n"></value>
    </attrib>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <position y="45.40909090909091" x="384.5"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item0" catch-name="item2" throw-bind-name="errorCode" type="task" comparator="0">
        <display-name>Scriptable task</display-name>
        <script encoded="false">if (vapiEndpoint == null) {
  throw "'endpoint' parameter should not be null";
}
if (tagCategoryId == null) {
  throw "'categoryId' parameter should not be null";
}
if (tagName == null) {
  throw "'name' parameter should not be null";
}



try{
	var client = vapiEndpoint.client();
	var tagging = new com_vmware_cis_tagging_tag(client);
	var spec = new com_vmware_cis_tagging_tag_create__spec();
	spec.category_id = tagCategoryId;
	spec.description = tagDescription ?  tagDescription : "Created by vRO";
	spec.name = tagName;
	var tagId = tagging.create(spec);
	System.debug("Tag ID created: " + tagId);

}catch(e){
	
	if (e.message.indexOf("com.vmware.vapi.std.errors.already_exists") &gt; -1){
		System.debug("Tag " + tagName + " already exists");
		System.debug(e.message);
		var tags = tagging.list();

		for each (var tag in tags){
			var obj = tagging.get(tag);
			if (tagName == obj.name){
				System.debug("Tag ID found " + obj.id + " for tag " + tagName);
				tagId = obj.id;
				break;
				}
		}
	} else {	
		throw(e)
	}
}</script>
        <in-binding>
            <bind name="vapiEndpoint" type="VAPI:VAPIEndpoint" export-name="vapiEndpoint"/>
            <bind name="tagDescription" type="string" export-name="tagDescription"/>
            <bind name="tagName" type="string" export-name="tagName"/>
            <bind name="tagCategoryId" type="string" export-name="tagCategoryId"/>
        </in-binding>
        <out-binding>
            <bind name="tagId" type="string" export-name="tagId"/>
        </out-binding>
        <position y="55.40909090909091" x="204.5"/>
    </workflow-item>
    <workflow-item name="item2" throw-bind-name="errorCode" type="end" end-mode="1" comparator="0">
        <position y="99.95454545454544" x="245.0"/>
    </workflow-item>
    <presentation>
        <p-param name="vapiEndpoint">
            <desc>vAPI Endpoint</desc>
            <p-qual kind="static" name="show-select-as" type="string">tree</p-qual>
            <p-qual kind="static" name="mandatory" type="boolean">true</p-qual>
            <p-qual name="contextualParameter" type="void">__NULL__</p-qual>
        </p-param>
        <p-param name="tagCategoryId">
            <desc>Tag category ID</desc>
            <p-qual kind="static" name="mandatory" type="boolean">true</p-qual>
        </p-param>
        <p-param name="tagDescription">
            <desc>description</desc>
        </p-param>
        <p-param name="tagName">
            <desc>name</desc>
        </p-param>
    </presentation>
</ns2:workflow>
